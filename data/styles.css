:root {
  --nav-height: 60px;
  --nav-pad-bottom: calc(var(--nav-height) + 15px);
  
  --background-color: black;
  --foreground-color: white;
  
  --primary-color-base: #004f4f;
  --primary-color-light: #00dddd;
  --primary-color-dark: #101414;
  
  --alert-color-base: #8e2c2e;
  --alert-color-light: #ffb4ab;
  --alert-color-dark: #4e0004;

  --neutral-color-base: #999999;
  --neutral-color-light: #bfbfbf;
  --neutral-color-dark: #323232;

  --filter-background-color: brightness(0%);
  --filter-foreground-color: brightness(1000%) contrast(100%);

  --filter-primary-color-base: brightness(0) saturate(100%) invert(63%) sepia(82%) saturate(1087%) hue-rotate(129deg) brightness(97%) contrast(101%);
  --filter-primary-color-light: brightness(0) saturate(100%) invert(65%) sepia(12%) saturate(7465%) hue-rotate(135deg) brightness(104%) contrast(101%);
  --filter-primary-color-dark: brightness(0) saturate(100%) invert(4%) sepia(4%) saturate(3090%) hue-rotate(131deg) brightness(99%) contrast(92%);
  
  /* WiFiManager primary color */
  --primarycolor: var(--primary-color-base);
}

body {
  margin: 0;
  font-family: 'Segoe UI', Tahoma, sans-serif;
  background-color: var(--background-color);
  color: var(--foreground-color);
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.wrap {
  text-align: center;
  padding: 15px;
}

.app-header {
  background-color: var(--primary-color-dark);
  color: var(--primary-color-light);
  text-align: center;
  padding: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.app-header .logo,
.bottom-nav .nav-btn .picto
{
  filter: var(--filter-primary-color-base);
}

.fab-button .icon .picto
{
  filter: var(--filter-primary-color-dark);
  vertical-align: middle;
}

.bottom-nav .nav-btn.selected {
  color: var(--foreground-color);
  font-weight: bold;
  
  background-color: color-mix(in srgb, var(--primary-color-light) 20%, transparent);
}

.bottom-nav .nav-btn.selected .picto {
  filter: var(--filter-foreground-color);
}

.logo {
  width: 48px;
  height: 48px;
}

.app-header h1 {
  margin-top: 10px;
  margin-bottom: 10px;
}

.main-content {
  flex: 1;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-gap: 12px;
  padding: 15px;
  padding-bottom: var(--nav-pad-bottom);
  box-sizing: border-box;
  overflow-y: auto;
  grid-auto-flow: row;
}

.tile {
  background-color: var(--primary-color-base);
  border-radius: 15px;
  text-align: center;
  padding: 20px;
}

.tile h2 {
  font-size: 1rem;
  margin-bottom: 8px;
  color: var(--primary-color-light);
}

.tile p .text {
  margin: 0;
}

.bottom-nav {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: var(--nav-height);
  background-color: var(--primary-color-base);
  display: flex;
  justify-content: space-around;
  padding: 0;
  box-shadow: 0 -2px 6px rgba(0, 0, 0, 0.3);
  z-index: 1000;
  padding-bottom: env(safe-area-inset-bottom);
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}

.nav-btn {
  background: none;
  border: none;
  color: var(--primary-color-light);
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  text-align: center;
  flex: 1;
  font-size: 0.8rem;
  padding: 4px 6px;
  text-decoration: none;
}

p .icon .picto {
  filter: var(--filter-foreground-color);
}

.nav-btn .icon {
  display: block;
  font-size: 1.4rem;
}

.nav-btn:active {
  background-color: rgba(255, 255, 255, 0.15);
  border-radius: 10px;
}

button {
  background-color: var(--primary-color-light);
  color: var(--primary-color-base);
  border: 3px solid var(--primary-color-light);
  padding: 10px 20px;
  margin: 5px;
  border-radius: 20px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  transition: all 0.3s ease;
}

button.full-width {
  width: 100%;
}

button.fab-button {
  position: absolute;
  width: 68px;
  height: 68px;
  border-radius: 50%;
  top: calc(var(--nav-height) + 10px);
  right: 15px;
  line-height: 2rem;
}

button.action-button:hover,
button.fab-button:hover,
.wrap button:hover {
  color: var(--primary-color-dark);
  border-color: var(--primary-color-dark);
}

button.action-button:active,
button.fab-button:active,
.wrap button:active {
  color: var(--primary-color-dark);
  border-color: var(--primary-color-dark);
  transform: translateY(3px);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
}

.wrap button {
  margin: 0px;
}

.wrap button.D {
  background-color: var(--alert-color-light);
  color: var(--alert-color-base);
  border: 3px solid var(--alert-color-light);
}

.wrap a {
  color: var(--foreground-color);
}

.wrap div[role="img"] {
  filter: invert(1);
  mask-mode: luminance;
  -webkit-mask-mode: luminance;
}

.msg.D {
  border-left-color: var(--alert-color-base);
  ;
}

.msg.D h4 {
  color: var(--alert-color-base);
  ;
}

input, select {
  color: var(--primary-color-dark);
  border: 3px solid var(--primary-color-light);
  padding: 10px 20px;
  margin: 5px;
  border-radius: 15px;
  font-size: 16px;
  font-weight: bold;
}

input:disabled, select:disabled {
  background-color: var(--neutral-color-light);
  border: 3px solid var(--neutral-color-base);
  border-color: var(--neutral-color-dark);
  cursor: not-allowed;
}

input:hover, select:hover {
  color: var(--primary-color-dark);
  border-color: var(--primary-color-dark);
}

input:focus, select:focus {
  color: var(--primary-color-dark);
  border-color: var(--primary-color-dark);
}

input:focus-visible, select:focus-visible {
  color: var(--primary-color-dark);
  border-color: var(--primary-color-dark);
  outline-color: var(--primary-color-dark);
  outline-style: none;
}

.chips {
  margin-top: 3px;
  margin-bottom: 3px;
}

.chip {
  background: var(--primary-color-light);
  color: var(--primary-color-dark);
  padding: 3px 6px;
  margin-top: 6px;
  border-radius: 15px;
  font-size: 12px;
  font-weight: bold;
  line-height: 2.5rem;
}

.chip.dark {
  background: var(--primary-color-dark);
  color: var(--foreground-color);
}

.switch-container {
  text-align: left;
  margin-bottom: 10px;
}

.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 26px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--neutral-color-light);
  transition: 0.3s;
  border-radius: 26px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

.slider::before {
  position: absolute;
  content: "";
  height: 20px;
  width: 20px;
  left: 3px;
  bottom: 3px;
  background-color: var(--neutral-color-dark);
  transition: 0.3s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: var(--primary-color-light);
}

input:checked + .slider::before {
  transform: translateX(24px);
  background-color: var(--primary-color-base);
}

/* Checkbox */
.checkbox-container, .radio-container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 14px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-align: left;
}

/* Hide the browser's default checkbox */
.checkbox-container input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkbox-container .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 24px;
  width: 24px;
  border-radius: 4px;
  background-color: var(--foreground-color);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

/* On mouse-over, add a grey background color */
.checkbox-container:hover input[type="checkbox"] ~ .checkmark {
  background-color: color-mix(in srgb, var(--primary-color-light) 20%, transparent);
}

/* When the checkbox is checked, add a blue background */
.checkbox-container input[type="checkbox"]:checked ~ .checkmark {
  background-color: var(--primary-color-light);
}

/* When the radio button is checked, add a blue background */
.checkbox-container input[type="checkbox"]:disabled ~ .checkmark {
  background-color: var(--neutral-color-light);
  cursor: not-allowed;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkbox-container .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkbox-container input[type="checkbox"]:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkbox-container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid var(--primary-color-dark);
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.checkbox-container input[type="checkbox"]:disabled ~ .checkmark:after {
  border: solid var(--neutral-color-dark);
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* Radio */

/* Hide the browser's default radio button */
.radio-container input[type="radio"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom radio button */
.radio-container .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: var(--foreground-color);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.radio-container:hover input[type="radio"] ~ .checkmark {
  background-color: color-mix(in srgb, var(--primary-color-light) 20%, transparent);
}

/* When the radio button is checked, add a blue background */
.radio-container input[type="radio"]:checked ~ .checkmark {
  background-color: var(--primary-color-light);
}

/* When the radio button is checked, add a blue background */
.radio-container input[type="radio"]:disabled ~ .checkmark {
  background-color: var(--neutral-color-light);
  cursor: not-allowed;
}

/* When the radio button is checked, add a blue background */
.radio-container input[type="radio"]:disabled ~ .checkmark:after {
  background-color: var(--neutral-color-dark);
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.radio-container .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.radio-container input[type="radio"]:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.radio-container .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--primary-color-dark);
}

/* Responsive */
@media (max-width: 600px) {
  .tile h2 {
    font-size: 0.9rem;
  }
}